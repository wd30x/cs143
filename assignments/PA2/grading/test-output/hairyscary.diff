1,326c1,71
< CLASS
< TYPEID Foo
< INHERITS
< TYPEID Bazz
< '{'
< OBJECTID a
< ':'
< TYPEID Razz
< ASSIGN
< CASE
< OBJECTID self
< OF
< OBJECTID n
< ':'
< TYPEID Razz
< DARROW
< '('
< NEW
< TYPEID Bar
< ')'
< ';'
< OBJECTID n
< ':'
< TYPEID Foo
< DARROW
< '('
< NEW
< TYPEID Razz
< ')'
< ';'
< OBJECTID n
< ':'
< TYPEID Bar
< DARROW
< OBJECTID n
< ';'
< ESAC
< ';'
< OBJECTID b
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID a
< '.'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID g
< '.'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID printh
< '('
< ')'
< ';'
< OBJECTID doh
< '('
< ')'
< ':'
< TYPEID Int
< '{'
< '('
< LET
< OBJECTID i
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID h
< IN
< '{'
< OBJECTID h
< ASSIGN
< OBJECTID h
< '+'
< INT_CONST 2
< ';'
< OBJECTID i
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID Bar
< INHERITS
< TYPEID Razz
< '{'
< OBJECTID c
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID doh
< '('
< ')'
< ';'
< OBJECTID d
< ':'
< TYPEID Object
< ASSIGN
< OBJECTID printh
< '('
< ')'
< ';'
< '}'
< ';'
< CLASS
< TYPEID Razz
< INHERITS
< TYPEID Foo
< '{'
< OBJECTID e
< ':'
< TYPEID Bar
< ASSIGN
< CASE
< OBJECTID self
< OF
< OBJECTID n
< ':'
< TYPEID Razz
< DARROW
< '('
< NEW
< TYPEID Bar
< ')'
< ';'
< OBJECTID n
< ':'
< TYPEID Bar
< DARROW
< OBJECTID n
< ';'
< ESAC
< ';'
< OBJECTID f
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID a
< '@'
< TYPEID Bazz
< '.'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID g
< '.'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID e
< '.'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID doh
< '('
< ')'
< '+'
< OBJECTID printh
< '('
< ')'
< ';'
< '}'
< ';'
< CLASS
< TYPEID Bazz
< INHERITS
< TYPEID IO
< '{'
< OBJECTID h
< ':'
< TYPEID Int
< ASSIGN
< INT_CONST 1
< ';'
< OBJECTID g
< ':'
< TYPEID Foo
< ASSIGN
< CASE
< OBJECTID self
< OF
< OBJECTID n
< ':'
< TYPEID Bazz
< DARROW
< '('
< NEW
< TYPEID Foo
< ')'
< ';'
< OBJECTID n
< ':'
< TYPEID Razz
< DARROW
< '('
< NEW
< TYPEID Bar
< ')'
< ';'
< OBJECTID n
< ':'
< TYPEID Foo
< DARROW
< '('
< NEW
< TYPEID Razz
< ')'
< ';'
< OBJECTID n
< ':'
< TYPEID Bar
< DARROW
< OBJECTID n
< ';'
< ESAC
< ';'
< OBJECTID i
< ':'
< TYPEID Object
< ASSIGN
< OBJECTID printh
< '('
< ')'
< ';'
< OBJECTID printh
< '('
< ')'
< ':'
< TYPEID Int
< '{'
< '{'
< OBJECTID out_int
< '('
< OBJECTID h
< ')'
< ';'
< INT_CONST 0
< ';'
< '}'
< '}'
< ';'
< OBJECTID doh
< '('
< ')'
< ':'
< TYPEID Int
< '{'
< '('
< LET
< OBJECTID i
< ':'
< TYPEID Int
< ASSIGN
< OBJECTID h
< IN
< '{'
< OBJECTID h
< ASSIGN
< OBJECTID h
< '+'
< INT_CONST 1
< ';'
< OBJECTID i
< ';'
< '}'
< ')'
< '}'
< ';'
< '}'
< ';'
< CLASS
< TYPEID Main
< '{'
< OBJECTID a
< ':'
< TYPEID Bazz
< ASSIGN
< NEW
< TYPEID Bazz
< ';'
< OBJECTID b
< ':'
< TYPEID Foo
< ASSIGN
< NEW
< TYPEID Foo
< ';'
< OBJECTID c
< ':'
< TYPEID Razz
< ASSIGN
< NEW
< TYPEID Razz
< ';'
< OBJECTID d
< ':'
< TYPEID Bar
< ASSIGN
< NEW
< TYPEID Bar
< ';'
< OBJECTID main
< '('
< ')'
< ':'
< TYPEID String
< '{'
< STR_CONST "do nothing"
< '}'
< ';'
< '}'
< ';'
---
> (* hairy  . . .*)
> 
> class Foo inherits Bazz {
>      a : Razz <- case self of
> 		      n : Razz #1 DARROW
>  (new Bar);
> 		      n : Foo #1 DARROW
>  (new Razz);
> 		      n : Bar #1 DARROW
>  n;
>    	         esac;
> 
>      b : Int <- a.doh() + g.doh() + doh() + printh();
> 
>      doh() : Int { (let i : Int <- h in { h <- h + 2; i; } ) };
> 
> };
> 
> class Bar inherits Razz {
> 
>      c : Int <- doh();
> 
>      d : Object <- printh();
> };
> 
> class Razz inherits Foo {
> 
>      e : Bar <- case self of
> 		  n : Razz #1 DARROW
>  (new Bar);
> 		  n : Bar #1 DARROW
>  n;
> 		esac;
> 
>      f : Int <- a@Bazz.doh() + g.doh() + e.doh() + doh() + printh();
> 
> };
> 
> class Bazz inherits IO {
> 
>      h : Int <- 1;
> 
>      g : Foo  <- case self of
> 		     	n : Bazz #1 DARROW
>  (new Foo);
> 		     	n : Razz #1 DARROW
>  (new Bar);
> 			n : Foo  #1 DARROW
>  (new Razz);
> 			n : Bar #1 DARROW
>  n;
> 		  esac;
> 
>      i : Object <- printh();
> 
>      printh() : Int { { out_int(h); 0; } };
> 
>      doh() : Int { (let i: Int <- h in { h <- h + 1; i; } ) };
> };
> 
> (* scary . . . *)
> class Main {
>   a : Bazz <- new Bazz;
>   b : Foo <- new Foo;
>   c : Razz <- new Razz;
>   d : Bar <- new Bar;
> 
>   main(): String { "do nothing" };
> 
> };
> 
